version: '3.8'

services:
  # =============================================================================
  # DATABASE SERVICES - PostgreSQL for each company (‡πÅ‡∏¢‡∏Å Database + Auth)
  # =============================================================================
  
  postgres-company-a:
    image: postgres:15
    container_name: postgres-company-a
    environment:
      POSTGRES_DB: siamtech_company_a
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_company_a_data:/var/lib/postgresql/data
      - ./init-company-a.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    networks:
      - siamtech_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d siamtech_company_a"]
      interval: 30s
      timeout: 10s
      retries: 5

  postgres-company-b:
    image: postgres:15
    container_name: postgres-company-b
    environment:
      POSTGRES_DB: siamtech_company_b
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    ports:
      - "5433:5432"
    volumes:
      - postgres_company_b_data:/var/lib/postgresql/data
      - ./init-company-b.sql:/docker-entrypoint-initdb.d/02-init.sql:ro
    networks:
      - siamtech_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d siamtech_company_b"]
      interval: 30s
      timeout: 10s
      retries: 5

  postgres-company-c:
    image: postgres:15
    container_name: postgres-company-c
    environment:
      POSTGRES_DB: siamtech_company_c
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    ports:
      - "5434:5432"
    volumes:
      - postgres_company_c_data:/var/lib/postgresql/data
      - ./init-company-c.sql:/docker-entrypoint-initdb.d/03-init.sql:ro
    networks:
      - siamtech_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d siamtech_company_c"]
      interval: 30s
      timeout: 10s
      retries: 5

  # =============================================================================
  # SHARED INFRASTRUCTURE
  # =============================================================================

  redis:
    image: redis:7-alpine
    container_name: siamtech-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - siamtech_network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # =============================================================================
  # ENHANCED RAG SERVICE
  # =============================================================================

  rag-service:
    build:
      context: .
      dockerfile: Dockerfile.rag
    container_name: siamtech-enhanced-rag-service
    ports:
      - "5000:5000"
    environment:
      # External Ollama Server
      - OLLAMA_BASE_URL=http://52.74.36.160:12434
      - OLLAMA_TIMEOUT=60
      
      # Multi-tenant Database Configuration
      - POSTGRES_HOST_COMPANY_A=postgres-company-a
      - POSTGRES_PORT_COMPANY_A=5432
      - POSTGRES_DB_COMPANY_A=siamtech_company_a
      - POSTGRES_USER_COMPANY_A=postgres
      - POSTGRES_PASSWORD_COMPANY_A=password123
      
      - POSTGRES_HOST_COMPANY_B=postgres-company-b
      - POSTGRES_PORT_COMPANY_B=5432
      - POSTGRES_DB_COMPANY_B=siamtech_company_b
      - POSTGRES_USER_COMPANY_B=postgres
      - POSTGRES_PASSWORD_COMPANY_B=password123
      
      - POSTGRES_HOST_COMPANY_C=postgres-company-c
      - POSTGRES_PORT_COMPANY_C=5432
      - POSTGRES_DB_COMPANY_C=siamtech_company_c
      - POSTGRES_USER_COMPANY_C=postgres
      - POSTGRES_PASSWORD_COMPANY_C=password123
      
      # Shared Services
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - TENANT_CONFIG_FILE=/app/tenant_config.yaml
      - DEFAULT_TENANT=company-a
      
      # Enhanced Models Configuration (‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏° tenant)
      - MODEL_COMPANY_A=llama3.1:8b
      - MODEL_COMPANY_B=llama3.1:8b 
      - MODEL_COMPANY_C=llama3.1:8b
      
      # Enhanced Features Configuration
      - ENABLE_PATTERN_MATCHING=true
      - ENABLE_BUSINESS_INTELLIGENCE=true
      - ENABLE_ADVANCED_PROMPTS=true
      - ENHANCED_SQL_VALIDATION=true
      - CONFIDENCE_SCORING=true
      
      # Performance Tuning
      - SQL_GENERATION_TIMEOUT=30
      - AI_RESPONSE_TIMEOUT=60
      - MAX_SQL_COMPLEXITY=high
      - ENABLE_SQL_CACHING=true
      
      # Debug and Logging  
      - LOG_LEVEL=INFO
      - ENABLE_ENHANCED_LOGGING=true
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app
      
      # Service Identification
      - SERVICE_VERSION=2.0.0
      - PROMPT_VERSION=2.0
      - AGENT_TYPE=FixedPostgresOllamaAgent
      - SAFETY_LEVEL=maximum
      - HALLUCINATION_PREVENTION=active

    networks:
      - siamtech_network
    depends_on:
      - postgres-company-a
      - postgres-company-b
      - postgres-company-c
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "/app/healthcheck.py"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 60s
    labels:
      - "com.siamtech.service=enhanced-rag"
      - "com.siamtech.version=2.0"
      - "com.siamtech.features=smart-sql,business-intelligence"

  # =============================================================================
  # N8N WORKFLOW ORCHESTRATOR - Updated for Enhanced RAG
  # =============================================================================

  n8n:
    image: n8nio/n8n:latest
    container_name: siamtech-n8n
    ports:
      - "5678:5678"
    environment:
      # n8n Configuration
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=password
      - N8N_HOST=localhost
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - WEBHOOK_URL=http://localhost:5678
      
      # External Ollama Server
      - OLLAMA_BASE_URL=http://52.74.36.160:12434
      
      # Enhanced RAG Service URL
      - RAG_SERVICE_URL=http://rag-service:5000
      - ENHANCED_RAG_ENDPOINTS=true
      
      # Multi-tenant Database Configuration (for n8n nodes)
      - POSTGRES_HOST_COMPANY_A=postgres-company-a
      - POSTGRES_PORT_COMPANY_A=5432
      - POSTGRES_DB_COMPANY_A=siamtech_company_a
      - POSTGRES_USER_COMPANY_A=postgres
      - POSTGRES_PASSWORD_COMPANY_A=password123
      
      - POSTGRES_HOST_COMPANY_B=postgres-company-b
      - POSTGRES_PORT_COMPANY_B=5432
      - POSTGRES_DB_COMPANY_B=siamtech_company_b
      - POSTGRES_USER_COMPANY_B=postgres
      - POSTGRES_PASSWORD_COMPANY_B=password123
      
      - POSTGRES_HOST_COMPANY_C=postgres-company-c
      - POSTGRES_PORT_COMPANY_C=5432
      - POSTGRES_DB_COMPANY_C=siamtech_company_c
      - POSTGRES_USER_COMPANY_C=postgres
      - POSTGRES_PASSWORD_COMPANY_C=password123
      
      # Enhanced Models per Tenant
      - MODEL_COMPANY_A=llama3.1:8b
      - MODEL_COMPANY_B=llama3.1:8b
      - MODEL_COMPANY_C=llama3.1:8b
      
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - siamtech_network
    depends_on:
      - postgres-company-a
      - postgres-company-b
      - postgres-company-c
      - redis
      - rag-service
    restart: unless-stopped
    labels:
      - "com.siamtech.service=workflow-orchestrator"
      - "com.siamtech.integration=enhanced-rag"

  # =============================================================================
  # COMPANY A - BANGKOK HQ (Enhanced Integration)
  # =============================================================================
  
  openwebui-proxy-company-a:
    build:
      context: .
      dockerfile: Dockerfile.proxy
    container_name: siamtech-proxy-company-a
    ports:
      - "8011:8001"
    environment:
      - N8N_BASE_URL=http://n8n:5678
      - TENANT_CONFIG_FILE=/app/tenant_config.yaml
      - DEFAULT_TENANT=company-a
      - FORCE_TENANT=company-a 
      - REQUIRE_TENANT_HEADER=false
      - PORT=8001
      - LOG_LEVEL=INFO
      - PYTHONUNBUFFERED=1
      
      # Enhanced RAG Integration
      - ENHANCED_RAG_SERVICE=http://rag-service:5000
      - USE_ENHANCED_ENDPOINTS=true
      - ENABLE_BUSINESS_INTELLIGENCE=true
      
      # Model specific for Company A
      - TENANT_MODEL=llama3.1:8b
      - OLLAMA_BASE_URL=http://52.74.36.160:12434
      
    networks:
      - siamtech_network
    depends_on:
      - n8n
      - rag-service
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "/app/healthcheck.py"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
  open-webui-company-a:
    image: ghcr.io/open-webui/open-webui:main
    container_name: siamtech-webui-company-a
    ports:
      - "3000:8080"
    environment:
      - ENV=development

      # üö® AUTH SETTINGS
      - WEBUI_AUTH_MODE=local
      - ENABLE_LOCAL_AUTH=true
      - ENABLE_TRUSTED_HEADER_AUTH=false
      - DISABLE_AUTH_HEADER_VALIDATION=true
      - ENABLE_OAUTH_SIGNUP=false
      - ENABLE_SSO=false
      - DISABLE_AUTO_LOGIN=true
      - AUTO_CREATE_FIRST_ADMIN=false   # ‡∏õ‡∏¥‡∏î auto-create admin

      # üîß USER REGISTRATION SETTINGS
      - DEFAULT_USER_ROLE=user
      - ENABLE_SIGNUP=true
      - ENABLE_USER_REGISTRATION=true
      - SIGNUP_ENABLED=true
      - ENABLE_SIGNUP_WITHOUT_VERIFICATION=true
      - DISABLE_SIGNUP=false
      - SHOW_ADMIN_DETAILS=false
      - ENABLE_NEW_SIGNUP=true
      - ENABLE_ADMIN_REGISTRATION_RESTRICTION=false
      - MAX_USERS=100

      # üîß ADMIN & USER CONTROL
      - ENABLE_COMMUNITY_SHARING=false
      - ENABLE_USER_DELETION=true
      - ENABLE_MODEL_FILTER=false

      # üîß SESSION & COOKIE SETTINGS
      - WEBUI_SESSION_COOKIE_NAME=webui_session_v2
      - WEBUI_SESSION_COOKIE_SAME_SITE=lax
      - WEBUI_SESSION_COOKIE_SECURE=false
      - WEBUI_SESSION_COOKIE_HTTP_ONLY=true
      - WEBUI_COOKIE_MAX_AGE=86400
      - WEBUI_SESSION_TIMEOUT=3600

      # üîß UI/UX SETTINGS
      - ENABLE_LOGIN_FORM=true
      - ENABLE_PASSWORD_RESET=true
      - DEFAULT_LOCALE=th

      # Company A Specific Settings
      - WEBUI_SECRET_KEY=siamtech-secret-2024
      - OPENAI_API_BASE_URL=http://openwebui-proxy-company-a:8001/v1
      - OPENAI_API_KEY=sk-company-a-enhanced-llama31-8b
      - WEBUI_NAME=SiamTech Bangkok HQ - Enhanced AI Assistant (v2.0)
      - WEBUI_URL=http://localhost:3000
      - WEBUI_DESCRIPTION=Enhanced AI Assistant ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏ç‡πà ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£ (Smart SQL + Business Intelligence)
      - WEBUI_THEME_COLOR=#667eea
      - WEBUI_FEATURES=enhanced_sql,business_intelligence,pattern_matching
      - WEBUI_AUTH_REDIRECT_URL=/auth/signin

      
    volumes:
      - open_webui_company_a_data:/app/backend/data
    networks:
      - siamtech_network
    depends_on:
      - openwebui-proxy-company-a
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    labels:
      - "com.siamtech.company=a"
      - "com.siamtech.enhancement=v2.0"
      - "com.siamtech.auth=local-fixed"

  # =============================================================================
  # COMPANY B - CHIANG MAI REGIONAL (Enhanced Integration)
  # =============================================================================
  
  openwebui-proxy-company-b:
    build:
      context: .
      dockerfile: Dockerfile.proxy
    container_name: siamtech-proxy-company-b
    ports:
      - "8101:8001"
    environment:
      - N8N_BASE_URL=http://n8n:5678
      - TENANT_CONFIG_FILE=/app/tenant_config.yaml
      - DEFAULT_TENANT=company-b
      - FORCE_TENANT=company-b 
      - REQUIRE_TENANT_HEADER=false
      - PORT=8001
      - LOG_LEVEL=INFO
      - PYTHONUNBUFFERED=1
      
      # Enhanced RAG Integration
      - ENHANCED_RAG_SERVICE=http://rag-service:5000
      - USE_ENHANCED_ENDPOINTS=true
      - ENABLE_BUSINESS_INTELLIGENCE=true
      
      # Model specific for Company B
      - TENANT_MODEL=llama3.1:8b
      - OLLAMA_BASE_URL=http://52.74.36.160:12434
      
    networks:
      - siamtech_network
    depends_on:
      - n8n
      - rag-service
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "/app/healthcheck.py"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
  open-webui-company-b:
    image: ghcr.io/open-webui/open-webui:main
    container_name: siamtech-webui-company-b
    ports:
      - "3100:8080"
    environment:
      - ENV=development
      - DEFAULT_USER_ROLE=admin
      - WEBUI_SECRET_KEY=siamtech-secret-2024
      - ENABLE_SIGNUP=true
      - OPENAI_API_BASE_URL=http://openwebui-proxy-company-b:8001/v1
      - OPENAI_API_KEY=sk-company-b-enhanced-llama3.1:8b
      - WEBUI_NAME=SiamTech Chiang Mai - Enhanced AI Assistant (v2.0)
      - WEBUI_URL=http://localhost:3100
      - DEFAULT_USER_ROLE=user
      - ENABLE_SIGNUP=true
      - SHOW_ADMIN_DETAILS=false
      - WEBUI_DESCRIPTION=Enhanced AI Assistant ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏≤‡∏Ç‡∏≤‡∏†‡∏≤‡∏Ñ‡πÄ‡∏´‡∏ô‡∏∑‡∏≠ ‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà (Tourism Intelligence + Smart Analytics)
      # Enhanced Theme
      - WEBUI_THEME_COLOR=#f093fb
      - WEBUI_FEATURES=enhanced_sql,tourism_intelligence,regional_analytics
      - WEBUI_AUTH_REDIRECT_URL=/auth/signin
      - WEBUI_SESSION_COOKIE_SAME_SITE=lax
    volumes:
      - open_webui_company_b_data:/app/backend/data
    networks:
      - siamtech_network
    depends_on:
      - openwebui-proxy-company-b
    restart: unless-stopped
    labels:
      - "com.siamtech.company=b"
      - "com.siamtech.enhancement=v2.0"

  # =============================================================================
  # COMPANY C - INTERNATIONAL (Enhanced Integration)
  # =============================================================================
  
  openwebui-proxy-company-c:
    build:
      context: .
      dockerfile: Dockerfile.proxy
    container_name: siamtech-proxy-company-c
    ports:
      - "8201:8001"
    environment:
      - N8N_BASE_URL=http://n8n:5678
      - TENANT_CONFIG_FILE=/app/tenant_config.yaml
      - DEFAULT_TENANT=company-c
      - FORCE_TENANT=company-c
      - REQUIRE_TENANT_HEADER=false
      - PORT=8001
      - LOG_LEVEL=INFO
      - PYTHONUNBUFFERED=1
      
      # Enhanced RAG Integration
      - ENHANCED_RAG_SERVICE=http://rag-service:5000
      - USE_ENHANCED_ENDPOINTS=true
      - ENABLE_BUSINESS_INTELLIGENCE=true
      
      # Model specific for Company C
      - TENANT_MODEL=llama3.1:8b
      - OLLAMA_BASE_URL=http://52.74.36.160:12434
      
    networks:
      - siamtech_network
    depends_on:
      - n8n
      - rag-service
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "/app/healthcheck.py"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
  open-webui-company-c:
    image: ghcr.io/open-webui/open-webui:main
    container_name: siamtech-webui-company-c
    ports:
      - "3200:8080"
    environment:
      - ENV=development
      - DEFAULT_USER_ROLE=admin
      - WEBUI_SECRET_KEY=siamtech-secret-2024
      - ENABLE_SIGNUP=true
      - OPENAI_API_BASE_URL=http://openwebui-proxy-company-c:8001/v1
      - OPENAI_API_KEY=sk-company-c-enhanced-llama3.1:8b
      - WEBUI_NAME=SiamTech International - Enhanced AI Assistant (v2.0)
      - WEBUI_URL=http://localhost:3200
      - DEFAULT_USER_ROLE=user
      - ENABLE_SIGNUP=true
      - SHOW_ADMIN_DETAILS=false
      - WEBUI_DESCRIPTION=Enhanced AI Assistant for Global Operations (Global Intelligence + Multi-Currency Analytics)
      # Enhanced Theme
      - WEBUI_THEME_COLOR=#4facfe
      - WEBUI_FEATURES=enhanced_sql,global_intelligence,multi_currency_analytics
      - WEBUI_AUTH_REDIRECT_URL=/auth/signin
      - WEBUI_SESSION_COOKIE_SAME_SITE=lax
    volumes:
      - open_webui_company_c_data:/app/backend/data
    networks:
      - siamtech_network
    depends_on:
      - openwebui-proxy-company-c
    restart: unless-stopped
    labels:
      - "com.siamtech.company=c"
      - "com.siamtech.enhancement=v2.0"

  # =============================================================================
  # ENHANCED ADMIN DASHBOARD
  # =============================================================================

  admin-dashboard:
    image: nginx:alpine
    container_name: siamtech-enhanced-admin-dashboard
    ports:
      - "9000:80"
    volumes:
      - ./admin-dashboard:/usr/share/nginx/html:ro
    networks:
      - siamtech_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "com.siamtech.service=admin-dashboard"
      - "com.siamtech.version=enhanced"

# =============================================================================
# VOLUMES
# =============================================================================
volumes:
  postgres_company_a_data:
    driver: local
  postgres_company_b_data:
    driver: local
  postgres_company_c_data:
    driver: local
  open_webui_company_a_data:
    driver: local
  open_webui_company_b_data:
    driver: local
  open_webui_company_c_data:
    driver: local
  redis_data:
    driver: local
  n8n_data:
    driver: local

# =============================================================================
# NETWORKS
# =============================================================================
networks:
  siamtech_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.25.0.0/16
          gateway: 172.25.0.1

# =============================================================================
# ENHANCED SYSTEM METADATA
# =============================================================================
# Labels for the entire compose stack
x-siamtech-metadata:
  version: "2.0.0"
  enhancement_features:
    - smart_sql_generation_with_patterns
    - business_intelligence_insights
    - enhanced_prompt_engineering_v2
    - advanced_error_handling
    - performance_tracking
    - confidence_scoring
  description: "Enhanced Multi-Tenant RAG System with Smart SQL Generation and Business Intelligence"
  upgrade_notes: "Includes enhanced PostgreSQL agent with pattern matching and advanced prompts"